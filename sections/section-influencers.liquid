{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'section-influencers.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: calc({{ section.settings.padding_top }}px * 0.75);
    padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="section-{{ section.id }}-padding">
    <div
      class="page-width {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      {% if settings.animations_reveal_on_scroll %}
        data-cascade
      {% endif %}
    >
      {%- unless section.settings.title == blank -%}
        <div class="title-wrapper-with-link justify-center title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
          <h2 class="title inline-richtext {{ section.settings.heading_size }}">
            {{ section.settings.title }}
          </h2>
          {%- if section.settings.button_label != blank and show_mobile_slider -%}
            <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide">
              {{- section.settings.button_label | escape -}}
            </a>
          {%- endif -%}
          {%- if section.settings.description_section != blank -%}
            <span class="divider"></span>
            <div class="collection__description center {{ section.settings.description_style }}">{{ section.settings.description_section }}</div>
          {%- endif -%}
        </div>
      {%- endunless -%}
      <slider-component class="slider-mobile-gutter">
        <ul
          class="contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--2-col-tablet-only grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--mobile grid--peek{% endif %}"
          id="Slider-{{ section.id }}"
          role="list"
        >
          {%- liquid
            assign highest_video_ratio = 0
            assign highest_ratio = 0
            for block in section.blocks
              if block.settings.image.aspect_ratio > highest_ratio
                assign highest_ratio = block.settings.image.aspect_ratio
              endif
              if block.settings.video.preview_image.height > highest_video_ratio
                assign highest_video_ratio = block.settings.video.preview_image.aspect_ratio
              endif
            endfor
          -%}

          {%- for block in section.blocks -%}
            <li
              id="Slide-{{ section.id }}-{{ forloop.index }}"
              class="grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              <div class="content-container  global-media-settings ">
                {%- if block.settings.image != blank or block.settings.video != blank -%}
                  <div class="influencer-card__image-wrapper">
                    {% if block.settings.video != blank %}
                    {% assign poster = block.settings.video.preview_image %}
                    <video-media
                      class="media media--transparent media--adapt"
                      style="padding-bottom: {{ 1 | divided_by: highest_video_ratio | times: 100 }}%;"
                      data-video-src="{{ block.settings.video.sources[0].url }}"
                    >
                        {%- liquid
                          assign number_of_columns = 1
                          assign number_of_columns_mobile = 1
                          assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                          assign image_width = 1
                        -%}
                        {% capture sizes %}
                        (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                        (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                        (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                        calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                        {% endcapture %}
                        {{
                          poster
                            | image_url: width: 800
                            | image_tag:
                                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                sizes: sizes,
                                loading: 'lazy'
                        }}
                        <noscript>
                          {{
                            block.settings.video
                            | video_tag:
                              image_size: '800x',
                              autoplay: true,
                              loop: true,
                              controls: false,
                              muted: true,
                              preload: 'none',
                              playsinline: 'playsinline'
                          }}
                        </noscript>
                    </video-media>
                    {% else %}
                      <div
                        class="media media--transparent media--adapt"
                        style="padding-bottom: 123%;"
                      >
                          {%- liquid
                            assign number_of_columns = section.settings.columns_desktop
                            assign number_of_columns_mobile = section.settings.columns_mobile
                            assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                            assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                            assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                            assign image_width = 1
                          -%}
                          {% capture sizes %}
                            (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                            (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                            (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                            calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                          {% endcapture %}
                          {{
                            block.settings.image
                            | image_url: width: 3200
                            | image_tag:
                              loading: 'lazy',
                              widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                              sizes: sizes,
                              class: 'multicolumn-card__image'
                          }}
                      </div>
                    {% endif %}
                  </div>
                {%- endif -%}
                <div class="influencer-card__info color-{{ section.settings.color_scheme_card }} gradient">
                  {%- if block.settings.content != blank -%}
                    <div class="rte">{{ block.settings.content }}</div>
                  {%- endif -%}
                </div>
              </div>
            </li>
          {%- endfor -%}
        </ul>
  
        {%- if show_mobile_slider -%}
          <div class="slider-buttons no-js-hidden medium-hide">
            <button
              type="button"
              class="slider-button slider-button--prev"
              name="previous"
              aria-label="{{ 'general.slider.previous_slide' | t }}"
            >
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </button>
            <div class="slider-counter caption">
              <span class="slider-counter--current">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
              <span class="slider-counter--total">{{ section.blocks.size }}</span>
            </div>
            <button
              type="button"
              class="slider-button slider-button--next"
              name="next"
              aria-label="{{ 'general.slider.next_slide' | t }}"
            >
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </button>
          </div>
        {%- endif -%}
      </slider-component>
      <div class="center{% if show_mobile_slider %} small-hide medium-hide{% endif %}">
        {%- if section.settings.button_label != blank -%}
          <a
            class="button button--primary"
            {% if section.settings.button_link == blank %}
              role="link" aria-disabled="true"
            {% else %}
              href="{{ section.settings.button_link }}"
            {% endif %}
          >
            {{ section.settings.button_label | escape }}
          </a>
        {%- endif -%}
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Influencers Image/Video",
  "tag": "section",
  "class": "section influencers-section",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Multicolumn",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_card",
      "label": "Card color schema",
      "default": "background-1"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "video",
          "id": "video",
          "label": "t:sections.video.settings.video.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Influencers Image/Video"
    }
  ]
}
{% endschema %}