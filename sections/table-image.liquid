{%- style -%}
    .section-{{ section.id }}-padding {
        padding-top: calc({{ section.settings.padding_top }}px * 0.75);
        padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
    }


    .title-image-wrapper {
        max-width: 90rem;
        margin-left: auto;
        margin-right: auto;
    }
    @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
        }
    }

    @media (max-width: 749px) {
        .table-wrapper img {
          min-width: 110rem;
        }
        .table-page-width {
          padding-left: 0;
          padding-right: 0;
        }
    }
{%- endstyle -%}
<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="section-{{ section.id }}-padding">
    <div
        class="page-width"
    >
        {%- unless section.settings.heading == blank or section.settings.title_image != blank -%}
            <div class="title-wrapper title-wrapper--no-top-margin{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
                <h2 class="title inline-richtext center {{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
            </div>
        {%- endunless -%}

        {% if section.settings.title_image != blank %}
            <div class="title-wrapper title-image-wrapper title-wrapper--no-top-margin{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
                <div
                    class="media media--transparent media--{{ section.settings.image_ratio }}"
                      style="padding-bottom: {{ 1 | divided_by: section.settings.title_image.aspect_ratio | times: 100 }}%;"
                  >
                    {%- liquid
                      assign number_of_columns = 1
                      assign number_of_columns_mobile = 2
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      assign image_width = 1
                    -%}
                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}
                    {{
                        section.settings.title_image
                      | image_url: width: 1500
                      | image_tag:
                        loading: 'lazy',
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes
                    }}
                </div>
            </div>
        {% endif %}
    </div>
    <div
        class="page-width table-page-width"
    >
        {% if section.settings.image != blank %}
            <div class="table-wrapper">
                {%- liquid
                    assign number_of_columns = 1
                    assign number_of_columns_mobile = 2
                    assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                    assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                    assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                    assign image_width = 1
                    -%}
                    {% capture sizes %}
                    (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                    (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                    (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                    calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}
                    {{
                    section.settings.image
                    | image_url: width: 3200
                    | image_tag:
                        loading: 'lazy',
                        widths: '1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes
                    }}
            </div>
        {% endif %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Table Image",
  "tag": "section",
  "class": "section",
  "settings": [
    {
        "type": "image_picker",
        "id": "title_image",
        "label": "Title Image"
    },
    {
        "type": "inline_richtext",
        "id": "heading",
        "default": "Video",
        "label": "t:sections.video.settings.heading.label"
    },
    {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
          },
          {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
          },
          {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
          }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
    },
    {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "Table Image"
    }
  ]
}
{% endschema %}